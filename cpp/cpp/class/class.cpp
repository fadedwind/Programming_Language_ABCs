class MyClass {
private:
    int myVariable;
public:
    // 构造函数
    MyClass(int value) {
        myVariable = value;
        // 可以在构造函数中执行其他初始化操作
    }

    // 成员函数
    void myFunction() {
        // 实现功能
    }

    // 析构函数
    ~MyClass() {
        // 清理操作
    }
};
// 在建立一个类时，你需要注意以下几点：

// 类的命名

// 类的成员变量：确定类需要的数据成员，并为它们选择合适的数据类型。
// 类的成员函数：确定类需要的功能成员，并为它们编写函数原型和实现。
// 封装性：使用访问修饰符（如public、private和protected）来限制成员的访问权限，以实现数据封装。

// 成员函数是定义在类中的函数，用于实现类的功能。它们可以访问类的成员变量和其他成员函数，并且可以通过对象进行调用。
// 成员函数的定义通常在类的内部进行。

// 构造函数和析构函数：为类编写适当的构造函数和析构函数来初始化和清理对象。
// 构造函数是一种特殊的成员函数，用于在创建对象时进行初始化操作。它的名称与类名相同，没有返回类型，并且可以具有参数。
// 构造函数在对象被创建时自动调用，用于初始化对象的数据成员。

// 析构函数是另一种特殊的成员函数，其名称与类名相同但前面带有波浪线（~），用于在对象被销毁时执行清理操作。


