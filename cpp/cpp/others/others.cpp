#include <iostream>
using namespace std;
// 知识点1
int main() {
    char c;
    while((c = getchar()) != EOF) {
        putchar(c);
    } return 0;
}
// 这是一个 C++ 的语句，用于从标准输入中读取字符直到遇到文件结束符（EOF）为止。使用了 getchar() 函数，它会读取一个字符并返回其 ASCII 值。
// 语句中，c 是一个变量，存储每次读取的字符。
//getchar() 函数将读取一个字符，并将其赋值给 c。然后，通过比较 c 是否等于 EOF 来判断是否继续循环。
// 当输入的字符不是文件结束符时，循环会继续执行并读取下一个字符。
//当遇到文件结束符时（例如，Ctrl+Z（在 Windows 系统上）），循环将结束，程序将继续执行下一步。
// 这样的循环结构通常用于从标准输入流（键盘）逐个读取字符，直到到达文件末尾或者遇到特定的结束条件。

//知识点2
// 以下是 C++ 中常见的运算符优先级从高到低的顺序：
// 一元后缀运算符（如 (), [], ->）：按需执行
// 一元前缀运算符（如 ++, --, +, -, !, ~, *, &, sizeof, typeid）：从右到左
// 乘法和除法运算符：*, /, %：从左到右
// 加法和减法运算符：+, -：从左到右
// 移位运算符：<<, >>：从左到右
// 关系运算符：<, >, <=, >=：从左到右
// 相等性运算符：==, !=：从左到右
// 按位与运算符：&：从左到右
// 按位异或运算符：^：从左到右
// 按位或运算符：|：从左到右
// 逻辑与运算符：&&：从左到右
// 逻辑或运算符：||：从左到右
// 条件运算符（三元运算符）：condition ? expr1 : expr2：从右到左
// 赋值运算符：=, +=, -=, *=, /=, %=, <<=, >>=, &=, ^=, |=：从右到左
// 逗号运算符：,：从左到右
// 请注意，运算符的优先级决定了它们在表达式中的执行顺序。在复杂的表达式中，可以使用括号来明确指定运算的顺序，以免产生歧义。