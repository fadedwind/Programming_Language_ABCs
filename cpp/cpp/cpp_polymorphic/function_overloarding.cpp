// 函数重载是指在同一个作用域内，可以定义多个同名但参数列表不同的函数。函数重载的作用主要有两个方面：

// 提供更灵活的函数调用方式：通过函数重载，可以使用相同的函数名进行不同类型或不同数量的参数传递，使代码更加简洁和可读。
//---（例如，可以定义多个同名的函数来处理不同类型的数据，而无需为每种数据类型编写不同的函数名。）
// 以下是一个函数重载的示例：


// 重载的函数add，用于相加两个整数和两个浮点数
int add(int a, int b) {
    return a + b;
}

// 因为重载了这个函数
float add(float a, float b) {
    return a + b;
}

int main() {
    int sum1 = add(5, 10);        // 调用第一个add函数，传递整数参数
    float sum2 = add(3.14f, 2.71f);   // 调用第二个add函数，传递浮点数参数
    return 0;
}
// 方便函数参数的处理和适应性：函数重载可以根据不同的参数类型提供不同的实现，以满足不同的需求。
//这样可以增加函数的适应性，使其可以处理更多类型的数据。
// 总结：函数重载通过相同的函数名和不同的参数列表，提供了更灵活的函数调用方式和更好的参数处理能力，增强了代码的可读性和适应性。